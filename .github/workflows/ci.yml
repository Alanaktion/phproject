name: CI

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        include:
          - php: '7.1'
            mysql: '5.7'
          - php: '7.2'
            mysql: '5.7'
          - php: '7.3'
            mysql: '5.7'
          - php: '7.4'
            mysql: '8'
          - php: '8.0'
            mysql: '8'
          - php: '8.1'
            mysql: '8'

    name: PHP ${{ matrix.php }}

    services:
      mysql:
        image: mysql:${{ matrix.mysql }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: phproject
        ports:
          - 3306/tcp
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
    - uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        tools: phpunit:8.5
      env:
        COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/checkout@v3

    - uses: actions/cache@v3
      env:
        cache-name: cache-composer
      with:
        path: ~/.composer
        key: ${{ runner.os }}-ci-${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-ci-${{ env.cache-name }}-
          ${{ runner.os }}-ci-
          ${{ runner.os }}-

    - name: Syntax check
      run: if find . -name "*.php" ! -path "./vendor/*" -exec php -l {} 2>&1 \; | grep "syntax error, unexpected"; then exit 1; fi

    - name: Composer
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - run: vendor/bin/phpcs

    - name: Install Phproject
      run: php install.php --site-name=Test --site-url=http://localhost/ --timezone=America/Phoenix --admin-username=test --admin-email=test@example.com --admin-password=secret --db-host=127.0.0.1 --db-port=${{ job.services.mysql.ports['3306'] }} --db-user=root

    - name: PHPUnit
      if: ${{ matrix.php != 7.1 }}
      run: phpunit
