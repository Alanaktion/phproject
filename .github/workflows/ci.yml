name: CI

on: [push, pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/php-actions/php-build:v1

    strategy:
      matrix:
        php: [7.1, 7.2, 7.3, 7.4, 8.0, 8.1]

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: phproject
        ports:
          - 3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
    - uses: actions/checkout@v3

    - uses: actions/cache@v3
      env:
        cache-name: cache-composer
      with:
        path: ~/.composer
        key: ${{ runner.os }}-ci-${{ env.cache-name }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-ci-${{ env.cache-name }}-
          ${{ runner.os }}-ci-
          ${{ runner.os }}-

    - run: switch-php-version ${{ matrix.php }}

    - name: Syntax check
      run: if find . -name "*.php" ! -path "./vendor/*" -exec php -l {} 2>&1 \; | grep "syntax error, unexpected"; then exit 1; fi

    - name: Composer
      run: |
        curl -o composer.phar -L https://getcomposer.org/composer-stable.phar
        php composer.phar install --no-ansi --no-interaction

    - run: vendor/bin/phpcs

    - name: Install Phproject
      run: php install.php --site-name=Test --site-url=http://localhost/ --timezone=America/Phoenix --admin-username=test --admin-email=test@example.com --admin-password=secret --db-host=mysql --db-user=root

    - name: PHPUnit
      if: ${{ matrix.php != 7.1 }}
      run: |
        curl -o phpunit.phar -L https://phar.phpunit.de/phpunit-8.phar
        php phpunit.phar
